name: Build, Test and Deploy to GitHub Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

env:
  NODE_VERSION: '20'
  CACHE_KEY: 'npm-cache'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    name: Build and Test Application

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Verify environments
        run: |
          echo "Checking environment files..."
          ls -la src/environments/
          echo "Development environment:"
          cat src/environments/environment.ts
          echo "Production environment:"
          cat src/environments/environment.prod.ts
          echo "GitHub Pages environment:"
          cat src/environments/environment.github-pages.ts

      - name: Run linting
        run: npm run lint
        continue-on-error: true

      - name: Build for development (verification)
        run: npm run build --configuration=development
        continue-on-error: true

      - name: Build for production (verification)
        run: npm run build --configuration=production
        continue-on-error: true

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npm run e2e
        continue-on-error: true
        env:
          CI: true

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results/
          retention-days: 30

      - name: Build for GitHub Pages
        run: npm run build:github-pages

      - name: Verify build output
        run: |
          echo "Build output structure:"
          ls -la dist/
          if [ -d "dist/ai-customer-service/browser" ]; then
            ls -la dist/ai-customer-service/browser/
            echo "index.html exists: $([ -f dist/ai-customer-service/browser/index.html ] && echo 'Yes' || echo 'No')"
          else
            echo "Build directory not found!"
            exit 1
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4
        if: github.ref == 'refs/heads/main'

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        if: github.ref == 'refs/heads/main'
        with:
          path: './dist/ai-customer-service/browser'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    name: Deploy to GitHub Pages

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Display deployment URL
        run: |
          echo "üöÄ Application deployed successfully!"
          echo "üì± Live URL: ${{ steps.deployment.outputs.page_url }}"
          echo "üîó Repository: ${{ github.repository }}"
          echo "üìù Commit: ${{ github.sha }}"
